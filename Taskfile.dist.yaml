version: '3'

# Starting point of building stuffs.
tasks:
  build:
    cmds:
      - GOOS=darwin go build -o bin/linux ./cmd/linux
      - codesign --entitlements linux.entitlements -s - ./bin/linux || true

  guestcmds:
    deps: [isle-guest, containerd-clog-logger, isle-helper]

  isle-guest:
    cmds:
      - GOOS=linux CGO_ENABLED=0 go build -o os/isle-guest ./cmd/isle-guest

  containerd-clog-logger:
    cmds:
      - GOOS=linux CGO_ENABLED=0 go build -o os/containerd-clog-logger ./pkg/clog/containerd-clog-logger

  isle-helper:
    cmds:
      - GOOS=linux CGO_ENABLED=0 go build -o os/isle-helper ./cmd/isle-helper

  # Don't forget to shutdown the VM if its running
  clean:
    cmds:
      - ./bin/linux --stop || true
      - rm -rf os/isle-guest os/isle-helper os/containerd-clog-logger os/resolve.conf

  # TODO(rjk): make sure that it can build from a cold start
  guestimage:
    deps: [ build, guestcmds, guestimage-darwin, guestimage-linux ]

  # TODO(rjk): debslim needs task installed.
  guestimage-darwin:
    platforms: [ darwin ]
    cmds:
      - echo 'running on darwin'
      # TODO(rjk): Start the image up in some clean way.
      # - ./bin/linux --state-dir $home/wrks/islestate -i ghcr.io/rjkroege/debslim --bg-start
      - ./bin/linux -d /home/{{.USER}}/mac{{trimPrefix .HOME .ROOT_DIR }}  'task guestimage-linux'

  guestimage-linux:
    platforms: [ linux ]
    cmds:
      - echo 'running on linux'
      - sudo buildah rm mgcontainer || true
      - cp /etc/resolv.conf ./os
      - cd os ; sudo  buildah bud --layers=true  -t makeguest
      - sudo buildah from --name mgcontainer makeguest
      - task: guestimage-linux-extract

  guestimage-linux-extract:
    platforms: [ linux ]
    vars:
      MKG:
        sh: sudo buildah mount mgcontainer
    cmds:
      - sudo cp {{.MKG}}/wd/os-unknown-arm64.tar.gz  .

  default:
    cmds:
      - task: guestimage

  # Convenience to respin the world.
  testing:
    deps: [ guestimage ]
    cmds:
      - ./bin/linux --state-dir $home/wrks/islestate --stop || true
      - rm -rf $home/wrks/islestate/*
      - cp -c os-unknown-arm64.tar.gz $ISLE_CACHE_DIR

  install:
    deps: [ build ]
    cmds:
      - cp ./bin/linux /usr/local/bin
   
